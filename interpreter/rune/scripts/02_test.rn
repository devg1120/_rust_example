
fn l(s) {
   println(s);
}

pub async fn main() {
    l("------------------------------------ struct_test");
    struct_test();
    l("------------------------------------ generator_test");
    generator_test();
    l("------------------------------------ ");
}

//=============================================
fn struct_test() {
    let user1 = User { username: "setbac", active: false };
    let user2 = User { username: "gusa", active: true };

    user1.describe();
    user1.set_active(true);
    user1.describe();
    user2.describe();

}

struct User {
    username,
    active,
}

impl User {
    fn set_active(self, active) {
        self.active = active;
    }

    fn describe(self) {
        if self.active {
            println(`${self.username} is active`);
        } else {
            println(`${self.username} is inactive`);
        }
    }
}

//=============================================

fn fib() {
    let a = 0;
    let b = 1;

    loop {
        yield a;
        let c = a + b;
        a = b;
        b = c;
    }
}
fn generator_test() {
    let g = fib();

    while let Some(n) = g.next() {
        println!("{}", n);

        if n > 100 {
            break;
        }
    }
}
